# Deploys the frontend website on a new release
name: Deploy to Production

on:
  release:
    types:
      - published # Trigger only when a release is published

jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-${{vars.RUNNER_VERSION}}
    environment: production
    env:
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_STUDIO_DATASET }}
      SANITY_STUDIO_TITLE: ${{ vars.SANITY_STUDIO_TITLE }}
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable

      - name: Build frontend for production
        run: yarn workspace frontend build:production

      - name: Build backend for production
        run: yarn workspace backend build

      # Cache the build after all is said and done.
      # This build will be used in the following jobs.
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  deploy:
    name: Deploy to production environment
    needs: build
    runs-on: ubuntu-${{ vars.RUNNER_VERSION }}
    environment: production
    env:
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_STUDIO_DATASET }}
      SANITY_STUDIO_TITLE: ${{ vars.SANITY_STUDIO_TITLE }}
    permissions:
      contents: read
      deployments: write

    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Restore build
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'packages/frontend'
          command: deploy --env production
