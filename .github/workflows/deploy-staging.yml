# Deploys frontend or backend to staging environment.

name: Deploy to Staging

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: 'Select deployment (frontend or backend)'
        required: true
        default: 'frontend'
        type: choice
        options:
          - frontend
          - backend

jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-${{vars.RUNNER_VERSION}}
    if: ${{ github.ref_name == 'staging' }}
    environment: staging
    env:
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_STUDIO_DATASET }}
      SANITY_STUDIO_TITLE: ${{ vars.SANITY_STUDIO_TITLE }}
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable

      - name: Build frontend for staging
        if: ${{ inputs.deployment_target == 'frontend' }}
        run: yarn workspace frontend build:staging

      - name: Build backend for staging
        if: ${{ inputs.deployment_target == 'backend' }}
        run: yarn workspace backend build

      # Cache the build after all is said and done.
      # This build will be used in the following jobs.
      - name: Cache build
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

  deploy:
    name: Deploy target
    runs-on: ubuntu-${{vars.RUNNER_VERSION}}
    needs: build
    env:
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_STUDIO_DATASET }}
      SANITY_STUDIO_TITLE: ${{ vars.SANITY_STUDIO_TITLE }}
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Restore build
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - name: Deploy frontend to Cloudflare Workers
        if: ${{ inputs.deployment_target == 'frontend' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'packages/frontend'
          command: deploy --env staging
      - name: Deploy backend to Cloudflare Pages
        if: ${{ inputs.deployment_target == 'backend' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'packages/backend'
          command: pages deploy --project-name=backend
