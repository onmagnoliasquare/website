# Build and test the backend package.

name: "Backend"

on:
  pull_request:
    branches: ["main", "staging", "dev"]
    paths-ignore:
      # Ignore changes in documentation.
      - "docs/**"
      - "README.md"

      # Ignore package.json changes.
      - "package.json"

      # Ignore changes in root directory.
      - ".gitattributes"
      - ".gitignore"
      - ".markdownlint.json"
      - ".yarnrc.yml"
      - "LICENSE"
      - "yarn.lock"
      - ".yarn"
      - ".vscode"

      # Ignore changes in .github directory.
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.*"

      # Ignore build related files.
      - ".env.example"

      # Ignore changes in frontend package.
      - "packages/frontend/**"

      # Ignore frontend package specific paths.
      - "packages/backend/static/**"
      - "packages/backend/.eslintrc"
      - "packages/backend/sanity.cli.ts"
      - "packages/backend/sanity.config.ts"
      - "packages/backend/schemaTypes/**"

  push:
    branches:
      [
        "main",
        "staging",
        "dev",
        "43-refactor-development-and-deployment-pipeline",
      ]
    paths-ignore:
      # Ignore changes in documentation.
      - "docs/**"
      - "README.md"

      # Ignore package.json changes.
      - "package.json"

      # Ignore changes in root directory.
      - ".gitattributes"
      - ".gitignore"
      - ".markdownlint.json"
      - ".yarnrc.yml"
      - "LICENSE"
      - "yarn.lock"
      - ".yarn"
      - ".vscode"

      # Ignore changes in .github directory.
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.*"

      # Ignore build related files.
      - ".env.example"

      # Ignore changes in frontend .
      - ".github/workflows/frontend.yml"
      - "packages/frontend/**"

      # Ignore backend package specific paths.
      - "packages/backend/static/**"
      - "packages/backend/.eslintrc"
      - "packages/backend/sanity.cli.ts"
      - "packages/backend/sanity.config.ts"
      - "packages/backend/schemaTypes/**"

jobs:
  setup:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

        # Yarn installation
      - name: Enable corepack
        run: corepack enable

      - name: Install yarn
        run: corepack install --global yarn@stable

      - name: Set yarn version
        run: corepack use yarn@stable

      - name: Install dependencies
        run: yarn --immutable

        # Cache dependencies.
        # Retrieved from: https://github.com/actions/cache/blob/main/examples.md#node---yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  test:
    runs-on: ubuntu-latest
    environment: development
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # Yarn installation
      - name: Enable corepack
        run: corepack enable

      - name: Install yarn
        run: corepack install --global yarn@stable

      - name: Set yarn version
        run: corepack use yarn@stable

        # ============================================== #
        # Retrieve cached dependencies from previous job #
        # ============================================== #

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

        # ============================================== #
        # ############################################## #
        # ============================================== #

      # Run unit tests
      - name: Run backend tests
        run: yarn test-ci:back

  # deploy:
