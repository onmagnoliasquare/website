# Build and test the frontend package.

name: 'Frontend'

on:
  pull_request:
    branches: ['main', 'staging', 'dev']
    paths-ignore:
      # Ignore changes in documentation.
      - 'docs/**'
      - 'README.md'

      # Ignore package.json changes.
      - 'package.json'

      # Ignore changes in root directory.
      - '.gitattributes'
      - '.gitignore'
      - '.markdownlint.json'
      - '.yarnrc.yml'
      - 'LICENSE'
      - 'yarn.lock'
      - '.yarn'
      - '.vscode'

      # Ignore changes in .github directory.
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/pull_request_template.*'

      # Ignore build related files.
      - '.env.example'

      # Ignore changes in backend.
      - '.github/workflows/backend.yml'
      - 'packages/backend/**'

      # Ignore frontend package specific paths.
      - 'packages/frontend/static/**'
      - 'packages/frontend/.eslintignore'
      - 'packages/frontend/.eslintrc.cjs'
      - 'packages/frontend/.prettierrc'
      - 'packages/frontend/styles/**'
      - 'packages/frontend/svelte.config.js'

  push:
    branches: ['main', 'staging', 'dev']
    paths-ignore:
      # Ignore changes in documentation.
      - 'docs/**'
      - 'README.md'

      # Ignore package.json changes.
      - 'package.json'

      # Ignore changes in root directory.
      - '.gitattributes'
      - '.gitignore'
      - '.markdownlint.json'
      - '.yarnrc.yml'
      - 'LICENSE'
      - 'yarn.lock'
      - '.yarn'
      - '.vscode'

      # Ignore changes in .github directory.
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/pull_request_template.*'

      # Ignore build related files.
      - '.env.example'

      # Ignore changes in backend package.
      - '.github/workflows/backend.yml'
      - 'packages/backend/**'

      - '.github/**'

      # Ignore frontend package specific paths.
      - 'packages/frontend/static/**'
      - 'packages/frontend/.eslintignore'
      - 'packages/frontend/.eslintrc.cjs'
      - 'packages/frontend/.prettierrc'
      - 'packages/frontend/styles/**'
      - 'packages/frontend/svelte.config.js'

jobs:
  # Sets the environment.
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      current_env: ${{ steps.set_env.outputs.current_env }}
    steps:
      - name: Check if production
        if: github.ref_name == 'main'
        run: |
          echo "ENVIRONMENT_NAME=production" >> "$GITHUB_ENV"
      - name: Check if staging
        if: github.ref_name == 'staging'
        run: |
          echo "ENVIRONMENT_NAME=staging" >> "$GITHUB_ENV"

      - name: Check if development
        if: github.ref_name == 'dev'
        run: |
          echo "ENVIRONMENT_NAME=development" >> "$GITHUB_ENV"

      # Original: https://magnussundstrom.se/blog/github-action-environment-check
      # Edited, due to: https://github.blog/changelog/2023-07-24-github-actions-update-on-save-state-and-set-output-commands/
      # Solution derived from: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-writing-an-environment-variable-to-github_env
      - name: Set environment
        id: set_env
        run: echo "current_env=${{ env.ENVIRONMENT_NAME }}" >> "$GITHUB_ENV"

  # Setup and build the yarn cache for the rest of the jobs.
  setup:
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.current_env }}
    needs: set-environment
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable

  # Run unit, component, and E2E tests.
  test:
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.current_env }}
    needs: setup
    env:
      SANITY_PROJECT_ID: ${{ vars.SANITY_PROJECT_ID }}
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_DATASET }}
      SANITY_DEVELOPER_TOKEN: ${{ secrets.SANITY_DEVELOPER_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Install playwright
        run: yarn playwright install
      - name: Run SvelteKit Check
        run: yarn check:front
      - name: Run frontend tests
        run: yarn test-ci:front

  # Deploy to services if on staging or on production.
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write

    if: github.ref_name == 'main' || github.ref_name == 'staging'
    environment: ${{ needs.set-environment.outputs.current_env }}
    needs: test
    env:
      SANITY_PROJECT_ID: ${{ vars.SANITY_PROJECT_ID }}
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_DATASET }}
      SANITY_DEVELOPER_TOKEN: ${{ secrets.SANITY_DEVELOPER_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build website
        run: yarn build:front
      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: 'packages/frontend'
          command: deploy
