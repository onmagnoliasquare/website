# Build and test the frontend package.

name: "Frontend"

on:
  pull_request:
    branches: ["main", "staging", "dev"]
    paths-ignore:
      # Ignore changes in documentation.
      - "docs/**"
      - "README.md"

      # Ignore package.json changes.
      - "package.json"

      # Ignore changes in root directory.
      - ".gitattributes"
      - ".gitignore"
      - ".markdownlint.json"
      - ".yarnrc.yml"
      - "LICENSE"
      - "yarn.lock"
      - ".yarn"
      - ".vscode"

      # Ignore changes in .github directory.
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.*"

      # Ignore build related files.
      - ".env.example"

      # Ignore changes in backend.
      - ".github/workflows/backend.yml"
      - "packages/backend/**"

      # Ignore frontend package specific paths.
      - "packages/frontend/static/**"
      - "packages/frontend/.eslintignore"
      - "packages/frontend/.eslintrc.cjs"
      - "packages/frontend/.prettierrc"
      - "packages/frontend/styles/**"
      - "packages/frontend/svelte.config.js"

  push:
    branches:
      [
        "main",
        "staging",
        "dev",
        "43-refactor-development-and-deployment-pipeline",
      ]
    paths-ignore:
      # Ignore changes in documentation.
      - "docs/**"
      - "README.md"

      # Ignore package.json changes.
      - "package.json"

      # Ignore changes in root directory.
      - ".gitattributes"
      - ".gitignore"
      - ".markdownlint.json"
      - ".yarnrc.yml"
      - "LICENSE"
      - "yarn.lock"
      - ".yarn"
      - ".vscode"

      # Ignore changes in .github directory.
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.*"

      # Ignore build related files.
      - ".env.example"

      # Ignore changes in backend package.
      - "packages/backend/**"

      # Ignore frontend package specific paths.
      - "packages/frontend/static/**"
      - "packages/frontend/.eslintignore"
      - "packages/frontend/.eslintrc.cjs"
      - "packages/frontend/.prettierrc"
      - "packages/frontend/styles/**"
      - "packages/frontend/svelte.config.js"

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: main
            environment: production
          - branch: staging
            environment: staging
          - branch: dev
            environment: development

    environment: ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

        # Yarn installation
      - name: Enable corepack
        run: corepack enable

      - name: Install yarn
        run: corepack install --global yarn@stable

      - name: Set yarn version
        run: corepack use yarn@stable

      - name: Install dependencies
        run: yarn --immutable

        # Cache dependencies.
        # Retrieved from: https://github.com/actions/cache/blob/main/examples.md#node---yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - branch: main
            environment: production
          - branch: staging
            environment: staging
          - branch: dev
            environment: development

    environment: ${{ matrix.environment }}
    needs: setup
    env:
      SANITY_PROJECT_ID: ${{ vars.SANITY_PROJECT_ID }}
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_DATASET }}
      SANITY_DEVELOPER_TOKEN: ${{ secrets.SANITY_DEVELOPER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

        # Use corepack
      - name: Enable corepack
        run: corepack enable

      - name: Install yarn
        run: corepack install --global yarn@stable

      - name: Set yarn version
        run: corepack use yarn@stable

        # ================================================ #
        #  Retrieve cached dependencies from previous job  #
        # ================================================ #

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

        # ============================================== #
        # ############################################## #
        # ============================================== #

        # Check if there are any errors in the SvelteKit code.
      - name: Run SvelteKit Check
        run: yarn check:front

        # Run unit tests.
      - name: Run frontend tests
        run: yarn test-ci:front

  # Deploy to services if on staging or on production.
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    strategy:
      matrix:
        include:
          - branch: main
            environment: production
          - branch: staging
            environment: staging

    if: github.ref_name == 'main' || github.ref_name == 'staging'
    environment: ${{ matrix.environment }}
    needs: test
    env:
      SANITY_PROJECT_ID: ${{ vars.SANITY_PROJECT_ID }}
      SANITY_API_VERSION: ${{ vars.SANITY_API_VERSION }}
      SANITY_DATASET: ${{ vars.SANITY_DATASET }}
      SANITY_DEVELOPER_TOKEN: ${{ secrets.SANITY_DEVELOPER_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

        # Use corepack
      - name: Enable corepack
        run: corepack enable

      - name: Install yarn
        run: corepack install --global yarn@stable

      - name: Set yarn version
        run: corepack use yarn@stable

        # ================================================ #
        #  Retrieve cached dependencies from previous job  #
        # ================================================ #

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

        # ============================================== #
        # ############################################## #
        # ============================================== #

      - name: Build website
        run: yarn build:front

      # Deploy using wrangler CLI
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          branch: ${{ github.ref_name }}
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: website
          directory: ".svelte-kit/output"
          workingDirectory: packages/frontend
          wranglerVersion: "3"
